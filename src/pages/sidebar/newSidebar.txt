import React, { useState } from "react";

const Sidebar = () => {
  const [isExpanded, setIsExpanded] = useState(false);

  const menuItems = [
    { icon: "🏠", title: "Home" },
    {
      icon: "📁",
      title: "Projects",
      subItems: [
        {
          icon: "📄",
          title: "Project 1",
          subItems: [
            { icon: "📝", title: "Tasks" },
            { icon: "👥", title: "Team" },
          ],
        },
        {
          icon: "📄",
          title: "Project 2",
          subItems: [
            { icon: "📊", title: "Analytics" },
            { icon: "💰", title: "Budget" },
          ],
        },
      ],
    },
    { icon: "📊", title: "Analytics" },
    {
      icon: "⚙️",
      title: "Settings",
      subItems: [
        { icon: "👤", title: "Profile" },
        {
          icon: "🔒",
          title: "Security",
          subItems: [
            { icon: "🔑", title: "Passwords" },
            { icon: "📱", title: "Two-Factor Auth" },
          ],
        },
      ],
    },
  ];

  return (
    <div
      className="sidebar"
      onMouseEnter={() => setIsExpanded(true)}
      onMouseLeave={() => setIsExpanded(false)}
      style={{
        width: isExpanded ? "250px" : "60px",
        transition: "width 0.3s ease",
        backgroundColor: "#f8f9fa",
        height: "100vh",
        overflow: isExpanded ? "auto" : "hidden",
        position: "fixed",
        left: 0,
        top: 0,
        boxShadow: "2px 0 5px rgba(0,0,0,0.1)",
      }}
    >
      <ul style={{ listStyle: "none", padding: 0, margin: 0 }}>
        {menuItems.map((item, index) => (
          <MenuItem key={index} item={item} isExpanded={isExpanded} level={0} />
        ))}
      </ul>
    </div>
  );
};

const MenuItem = ({ item, isExpanded, level }) => {
  const [isOpen, setIsOpen] = useState(false);

  const renderLevelLines = () => {
    return Array.from({ length: level }, (_, index) => (
      <div
        key={index}
        style={{
          position: "absolute",
          left: `${(index + 1) * 20}px`,
          top: 0,
          bottom: 0,
          width: "2px",
          backgroundImage:
            "linear-gradient(to bottom, #007bff 50%, transparent 50%)",
          backgroundSize: "100% 8px",
          opacity: 0.5,
        }}
      />
    ));
  };

  return (
    <li>
      <div
        style={{
          display: "flex",
          alignItems: "center",
          padding: "12px 15px",
          cursor: "pointer",
          position: "relative",
          whiteSpace: "nowrap",
          transition: "background-color 0.2s",
          backgroundColor: isOpen ? "#e9ecef" : "transparent",
        }}
        onClick={() => item.subItems && setIsOpen(!isOpen)}
      >
        {renderLevelLines()}
        <span
          style={{
            marginRight: "15px",
            marginLeft: `${level * 20}px`,
            width: "20px",
            height: "20px",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: level === 0 ? "#007bff" : "transparent",
            color: level === 0 ? "white" : "inherit",
            borderRadius: "4px",
            fontSize: "14px",
          }}
        >
          {item.icon}
        </span>
        {isExpanded && <span style={{ fontSize: "14px" }}>{item.title}</span>}
        {item.subItems && isExpanded && (
          <span
            style={{
              marginLeft: "auto",
              fontSize: "10px",
              transition: "transform 0.2s",
            }}
          >
            {isOpen ? "▼" : "▶"}
          </span>
        )}
      </div>
      {item.subItems && isOpen && isExpanded && (
        <ul style={{ listStyle: "none", padding: 0, margin: 0 }}>
          {item.subItems.map((subItem, index) => (
            <MenuItem
              key={index}
              item={subItem}
              isExpanded={isExpanded}
              level={level + 1}
            />
          ))}
        </ul>
      )}
    </li>
  );
};

export default Sidebar;
